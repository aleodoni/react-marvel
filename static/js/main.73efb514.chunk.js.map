{"version":3,"sources":["styles/global.js","services/history.js","pages/Main/styles.js","components/Character/styles.js","components/Character/index.js","components/Search/styles.js","components/Search/index.js","components/Loading/styles.js","components/Loading/index.js","store/modules/characterList/actions.js","store/modules/character/actions.js","pages/Main/index.js","components/Serie/styles.js","components/Serie/index.js","store/modules/series/actions.js","pages/Detail/styles.js","pages/Detail/index.js","pages/Edit/styles.js","pages/Edit/index.js","routes.js","store/modules/characterList/reducer.js","store/modules/character/reducer.js","store/modules/series/reducer.js","store/modules/rootReducer.js","services/api.js","store/modules/characterList/selectors.js","store/modules/characterList/sagas.js","store/modules/character/selectors.js","store/modules/character/sagas.js","store/modules/series/sagas.js","store/modules/rootSaga.js","store/index.js","store/persistReducers.js","store/createStore.js","App.js","index.js","assets/images/marvel.jpg"],"names":["createGlobalStyle","history","createBrowserHistory","basename","process","Container","styled","div","Logo","Thumb","Name","Content","Character","url","name","handleClick","onClick","src","alt","data-testid","Search","handleSearch","searchString","useSelector","state","characterList","useState","search","setSearch","type","placeholder","onChange","e","value","target","onKeyPress","key","size","Loading","getCharactersRequest","page","payload","getCharactersSuccess","characters","total","saveCharactersSuccess","updatedCharacters","saveCharacterRequest","characterId","description","saveCharacterSuccess","character","Main","dispatch","useDispatch","pageCount","loading","className","length","ref","React","createRef","useEffect","current","selected","marvel","string","map","id","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","forcePage","Imagem","Serie","onMouseEnter","onMouseLeave","getSeriesRequest","getSeriesSuccess","series","Image","Info","Desc","Series","SerieInfo","ButtonContainer","darken","Detail","serieDetails","setSerieDetails","showSerieDetails","setShowSerieDetails","handlePageClick","onMouseDown","push","serie","title","startYear","endYear","handleMouseEnter","Edit","initialData","onSubmit","data","saveCharactersRequest","multiline","Routes","path","exact","component","INITIAL_STATE","combineReducers","action","produce","draft","Math","ceil","toHash","hash","crypto","createHash","update","digest","api","axios","create","baseURL","defaults","params","ts","apikey","getCharacters","saveCharacter","limit","extraParams","offset","call","get","nameStartsWith","response","formatted","results","thumbnail","extension","put","toast","error","select","selectors","success","all","takeLatest","getCharacter","updatedCharacter","getSeries","rootSaga","reducers","sagaMiddleware","createSagaMiddleware","sagaMonitor","middlewares","store","enhancer","applyMiddleware","createStore","rootReducer","persistReducer","storage","whitelist","persistor","persistStore","run","App","autoClose","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.73efb514.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n    height: 100%;\n  }\n\n  #root {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body:before {\n    content:'';\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    z-index: -1;\n    background-image: linear-gradient(#25212e, #402744);\n  }\n\n  body, input, button, textarea, pre {\n    font-family: Roboto, Arial, Helvetica, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import { createBrowserHistory } from 'history';\n\n// const history = createBrowserHistory();\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  height: 100vh;\n\n  ul {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n\n  li {\n    display: flex;\n    padding: 10px;\n  }\n\n  li.active a {\n    background: rgba(0, 0, 0, 0.6);\n  }\n\n  li a {\n    cursor: pointer;\n    padding: 10px;\n    border-radius: 4px;\n    font-weight: bold;\n    color: #fff;\n\n    background: rgba(0, 0, 0, 0.2);\n  }\n\n  .hidden {\n    display: none;\n    background-color: red;\n  }\n\n  h1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n\n    color: rgba(255, 255, 255, 0.5);\n    height: 100%;\n  }\n`;\n\nexport const Logo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-top: 20px;\n  opacity: 0.5;\n\n  img {\n    height: 50px;\n    margin-right: 10px;\n  }\n\n  span {\n    color: #fff;\n    font-size: 42px;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  max-width: 1100px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n\n  img {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    margin-right: 20px;\n  }\n`;\n\nexport const Name = styled.div`\n  display: flex;\n\n  width: 100%;\n  color: #fff;\n  font-size: 24px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  /* flex: 1; */\n  justify-content: space-around;\n  align-items: center;\n\n  opacity: 0.8;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n  border-radius: 4px;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.5);\n  width: 500px;\n  margin: 5px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, Thumb, Name, Content } from './styles';\n\nexport default function Character({ url, name, handleClick }) {\n  return (\n    <Container>\n      <Content onClick={handleClick}>\n        <Thumb>\n          <img src={url} alt=\"imagem\" data-testid=\"character-img\" />\n        </Thumb>\n        <Name data-testid=\"character-name\">{name}</Name>\n      </Content>\n    </Container>\n  );\n}\n\nCharacter.propTypes = {\n  url: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  max-width: 500px;\n  width: 100%;\n  margin: 0 auto;\n\n  input {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    width: 100%;\n    margin-top: 20px;\n    border: none;\n    padding: 15px;\n    font-size: 24px;\n    background: rgba(0, 0, 0, 0.5);\n    color: #999;\n    padding: 20px 25px;\n    border-radius: 4px;\n  }\n\n  button {\n    margin-top: 20px;\n    margin-left: 5px;\n    border: none;\n    /* padding: 15px; */\n    background: rgba(0, 0, 0, 0.4);\n    color: #999;\n    padding: 20px 25px;\n    border-radius: 4px;\n    border: none;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { MdSearch } from 'react-icons/md';\n\nimport { Container } from './styles';\n\nexport default function Search({ handleSearch }) {\n  const searchString = useSelector(state => state.characterList.searchString);\n  const [search, setSearch] = useState(searchString);\n\n  function handleSearchChange(e) {\n    const { value } = e.target;\n    setSearch(value);\n  }\n\n  function handleKeyPressed(e) {\n    const { key } = e;\n    if (key === 'Enter') {\n      handleSearch(search);\n    }\n  }\n\n  return (\n    <Container>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Procure seu herói favorito\"\n        onChange={handleSearchChange}\n        onKeyPress={handleKeyPressed}\n        value={search}\n        data-testid=\"input-search\"\n      />\n      <button\n        type=\"button\"\n        onClick={() => handleSearch(search)}\n        data-testid=\"button-search\"\n      >\n        <MdSearch size={20} />\n      </button>\n    </Container>\n  );\n}\n\nSearch.propTypes = {\n  handleSearch: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  max-width: 1100px;\n  width: 100%;\n  margin: 0 auto;\n  height: 100vh;\n  color: rgba(0, 0, 0, 0.5);\n\n  svg {\n    animation: spin 2s linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\nimport { FaSpinner } from 'react-icons/fa';\n\nimport { Container } from './styles';\n\nexport default function Loading() {\n  return (\n    <Container>\n      <FaSpinner size={120} />\n    </Container>\n  );\n}\n","export function getCharactersRequest(page, searchString) {\n  return {\n    type: '@characters/REQUEST',\n    payload: { page, searchString },\n  };\n}\n\nexport function getCharactersSuccess(characters, total, searchString, page) {\n  return {\n    type: '@characters/SUCCESS',\n    payload: { characters, total, searchString, page },\n  };\n}\n\nexport function getCharactersFailure() {\n  return {\n    type: '@characters/FAILURE',\n  };\n}\n\nexport function saveCharactersRequest(characterId, name, description) {\n  return {\n    type: '@characters/SAVE_REQUEST',\n    payload: { characterId, name, description },\n  };\n}\n\nexport function saveCharactersSuccess(updatedCharacters) {\n  return {\n    type: '@characters/SAVE_SUCCESS',\n    payload: { updatedCharacters },\n  };\n}\n\nexport function saveCharactersFailure() {\n  return {\n    type: '@characters/SAVE_FAILURE',\n  };\n}\n","export function getCharacterRequest(characterId) {\n  return {\n    type: '@character/REQUEST',\n    payload: { characterId },\n  };\n}\n\nexport function getCharacterSuccess(character) {\n  return {\n    type: '@character/SUCCESS',\n    payload: { character },\n  };\n}\n\nexport function getCharacterFailure() {\n  return {\n    type: '@character/FAILURE',\n  };\n}\n\nexport function saveCharacterRequest(characterId, name, description) {\n  return {\n    type: '@character/SAVE_REQUEST',\n    payload: { characterId, name, description },\n  };\n}\n\nexport function saveCharacterSuccess(character) {\n  return {\n    type: '@character/SAVE_SUCCESS',\n    payload: { character },\n  };\n}\n\nexport function saveCharacterFailure() {\n  return {\n    type: '@character/SAVE_FAILURE',\n  };\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\n\nimport { Container, Logo } from './styles';\nimport Character from '../../components/Character';\nimport Search from '../../components/Search';\nimport Loading from '../../components/Loading';\nimport { getCharactersRequest } from '../../store/modules/characterList/actions';\nimport { getCharacterRequest } from '../../store/modules/character/actions';\n\nimport marvel from '../../assets/images/marvel.jpg';\n\nexport default function Main() {\n  const dispatch = useDispatch();\n\n  const page = useSelector(state => state.characterList.page);\n  const characters = useSelector(state => state.characterList.characters);\n  const pageCount = useSelector(state => state.characterList.pageCount);\n  const searchString = useSelector(state => state.characterList.searchString);\n  const loading = useSelector(state => state.characterList.loading);\n  const className = characters && characters.length === 0 ? 'hidden' : null;\n\n  const ref = React.createRef();\n\n  useEffect(() => {\n    dispatch(getCharactersRequest(page, searchString));\n  }, [page, dispatch, searchString]);\n\n  function handleSelectCharacter(id) {\n    dispatch(getCharacterRequest(id));\n  }\n\n  function handlePageClick({ selected }) {\n    dispatch(getCharactersRequest(selected + 1, searchString));\n  }\n\n  function onHandleSearch(string) {\n    dispatch(getCharactersRequest(1, string));\n    if (ref.current) ref.current.state.selected = 0;\n  }\n\n  if (loading) return <Loading />;\n\n  if (ref.current) ref.current.state.selected = 0;\n\n  return (\n    <Container>\n      <Logo>\n        <span>React +</span>\n        <img src={marvel} alt=\"marvel\" />\n        <span>API</span>\n      </Logo>\n      <Search handleSearch={onHandleSearch} />\n      {characters.map(character => (\n        <Character\n          key={character.id}\n          name={character.name}\n          url={character.url}\n          handleClick={() => handleSelectCharacter(character.id)}\n        />\n      ))}\n      <ReactPaginate\n        className={className}\n        previousLabel=\"<\"\n        nextLabel=\">\"\n        breakLabel=\"...\"\n        breakClassName=\"break-me\"\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={4}\n        onPageChange={handlePageClick}\n        containerClassName={className}\n        subContainerClassName=\"pages pagination\"\n        activeClassName=\"active\"\n        forcePage={page - 1}\n        ref={ref}\n      />\n      {className === 'hidden' && (\n        <h1>Nenhum herói com o nome &quot;{searchString}&quot; encontrado.</h1>\n      )}\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  /* flex: 1; */\n  flex-direction: column;\n  align-items: stretch;\n  opacity: 0.6;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Imagem = styled.div`\n  display: flex;\n\n  img {\n    height: 150px;\n    width: 150px;\n    border-radius: 4px;\n    margin-right: 10px;\n    margin-top: 10px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, Imagem } from './styles';\n\nexport default function Serie({ url, onMouseEnter, onMouseLeave }) {\n  return (\n    <Container onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n      <Imagem>\n        <img src={url} alt=\"imagem\" data-testid=\"serie-img\" />\n      </Imagem>\n    </Container>\n  );\n}\n\nSerie.propTypes = {\n  onMouseEnter: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","export function getSeriesRequest(characterId, page) {\n  return {\n    type: '@series/REQUEST',\n    payload: { characterId, page },\n  };\n}\n\nexport function getSeriesSuccess(series, total, page) {\n  return {\n    type: '@series/SUCCESS',\n    payload: { series, total, page },\n  };\n}\n\nexport function getSeriesFailure() {\n  return {\n    type: '@series/FAILURE',\n  };\n}\n\nexport function reserSeries() {\n  return {\n    type: '@series/RESET',\n  };\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n\n  max-width: 1100px;\n  width: 100%;\n  margin: 0 auto;\n  height: 100vh;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex: 1;\n\n  color: #fff;\n  padding: 20px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  /* max-width: 500px; */\n  width: 100%;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 4px;\n\n  ul {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    padding-left: 15px;\n    padding-right: 15px;\n    padding-top: 20px;\n  }\n\n  li {\n    display: flex;\n    padding: 10px;\n  }\n\n  li.active a {\n    background: rgba(0, 0, 0, 0.6);\n  }\n\n  li a {\n    cursor: pointer;\n    padding: 10px;\n    border-radius: 4px;\n    font-weight: bold;\n    color: #fff;\n\n    background: rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Character = styled.div`\n  display: flex;\n  /* flex: 1; */\n`;\n\nexport const Image = styled.div`\n  display: flex;\n\n  img {\n    height: 200px;\n    width: 200px;\n    border-radius: 4px;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  /* align-items: center; */\n  /* justify-content: center; */\n  flex-direction: column;\n\n  margin-left: 20px;\n`;\n\nexport const Name = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const Desc = styled.div`\n  font-size: 18px;\n  line-height: 32px;\n  opacity: 0.4;\n`;\n\nexport const Series = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-self: center;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  width: 100%;\n  /* flex: 1; */\n  /* flex-direction: column; */\n\n  padding-top: 20px;\n`;\n\nexport const SerieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  height: 100px;\n  /* flex: 1; */\n  /* flex-direction: column; */\n\n  padding-top: 20px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  width: 100%;\n\n  button {\n    padding: 10px;\n    border: 0;\n    border-radius: 4px;\n    font-size: 20px;\n    font-weight: bold;\n    margin: 5px;\n    transition: background 0.2s;\n  }\n\n  button.editar {\n    background: #d44059;\n    color: #fff;\n\n    &:hover {\n      background: ${darken(0.1, '#d44059')};\n    }\n  }\n\n  button.voltar {\n    background: #4dbaf9;\n    color: #fff;\n\n    &:hover {\n      background: ${darken(0.1, '#4dbaf9')};\n    }\n  }\n`;\n\nexport const Logo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-top: 20px;\n  opacity: 0.5;\n  cursor: pointer;\n\n  img {\n    height: 50px;\n    margin-right: 10px;\n  }\n\n  span {\n    color: #fff;\n    font-size: 42px;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\n\nimport Serie from '../../components/Serie';\nimport Loading from '../../components/Loading';\nimport marvel from '../../assets/images/marvel.jpg';\n\nimport {\n  getSeriesRequest,\n  reserSeries,\n} from '../../store/modules/series/actions';\n\nimport history from '../../services/history';\n\nimport {\n  Container,\n  Content,\n  Character,\n  Image,\n  Info,\n  Name,\n  Desc,\n  Series,\n  SerieInfo,\n  ButtonContainer,\n  Logo,\n} from './styles';\n\nexport default function Detail() {\n  const dispatch = useDispatch();\n\n  const page = useSelector(state => state.series.page);\n  const pageCount = useSelector(state => state.series.pageCount);\n  const character = useSelector(state => state.character.character);\n  const series = useSelector(state => state.series.series);\n  const loading = useSelector(state => state.series.loading);\n\n  const [serieDetails, setSerieDetails] = useState({});\n  const [showSerieDetails, setShowSerieDetails] = useState(false);\n\n  const className = series.length === 0 ? 'hidden' : null;\n\n  const ref = React.createRef();\n\n  // useEffect(() => {\n  //   dispatch(getSeriesRequest(character[0].id, page));\n  //   if (ref.current) ref.current.state.selected = 0;\n  // }, [page, dispatch, character]);\n\n  function handleMouseEnter(serie) {\n    setShowSerieDetails(true);\n    setSerieDetails(serie);\n  }\n\n  function handleMouseLeave() {\n    setShowSerieDetails(false);\n    setSerieDetails({});\n  }\n\n  function handlePageClick({ selected }) {\n    dispatch(getSeriesRequest(character[0].id, selected + 1));\n  }\n\n  function handleClickVoltar() {\n    dispatch(reserSeries());\n    history.push('/');\n  }\n\n  function handleClickEditar() {\n    // dispatch(reserSeries());\n    history.push('/edit');\n  }\n\n  function handleGoStart() {\n    dispatch(reserSeries());\n    history.push('/');\n  }\n\n  function geraLoading() {\n    if (loading) {\n      return <Loading />;\n    }\n    return (\n      <>\n        <Series>\n          {series.map(serie => (\n            <Serie\n              key={serie.id}\n              title={serie.title}\n              startYear={serie.startYear}\n              endYear={serie.endYear}\n              url={serie.url}\n              onMouseEnter={() => handleMouseEnter(serie)}\n              onMouseLeave={() => handleMouseLeave()}\n            />\n          ))}\n        </Series>\n        <ReactPaginate\n          className={className}\n          previousLabel=\"<\"\n          nextLabel=\">\"\n          breakLabel=\"...\"\n          breakClassName=\"break-me\"\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={4}\n          onPageChange={handlePageClick}\n          containerClassName={className}\n          subContainerClassName=\"pages pagination\"\n          activeClassName=\"active\"\n          forcePage={page - 1}\n          ref={ref}\n        />\n\n        <SerieInfo>\n          {showSerieDetails && (\n            <>\n              <Name>{serieDetails.title}</Name>\n              <Desc>\n                Começou em {serieDetails.startYear} e terminou em{' '}\n                {serieDetails.endYear}\n              </Desc>\n            </>\n          )}\n        </SerieInfo>\n      </>\n    );\n  }\n\n  return (\n    <Container>\n      <Logo onMouseDown={handleGoStart}>\n        <span>React +</span>\n        <img src={marvel} alt=\"marvel\" />\n        <span>API</span>\n      </Logo>\n      <Content>\n        <Character>\n          <Image>\n            <img src={character[0].url} alt=\"character\" />\n          </Image>\n          <Info>\n            <Name>{character[0].name}</Name>\n            <Desc>{character[0].description}</Desc>\n          </Info>\n        </Character>\n\n        {geraLoading()}\n\n        <ButtonContainer>\n          <button\n            type=\"button\"\n            className=\"editar\"\n            onMouseDown={handleClickEditar}\n          >\n            Editar personagem\n          </button>\n          <button\n            type=\"button\"\n            className=\"voltar\"\n            onMouseDown={handleClickVoltar}\n          >\n            Voltar à pesquisa\n          </button>\n        </ButtonContainer>\n      </Content>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n\n  max-width: 1100px;\n  width: 100%;\n  margin: 0 auto;\n  height: 100vh;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex: 1;\n\n  color: #fff;\n  padding: 20px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  /* max-width: 500px; */\n  width: 100%;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 4px;\n\n  form {\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n    margin-top: 30px;\n\n    span {\n      color: #d44059;\n      align-self: flex-start;\n      margin: 0 0 10px;\n      font-weight: bold;\n    }\n\n    input,\n    textarea {\n      font-size: 20px;\n      background: rgba(0, 0, 0, 0.2);\n      border: 0;\n      border-radius: 4px;\n      height: 64px;\n      padding: 0 15px;\n      color: #fff;\n      margin: 0 0 15px;\n\n      &::placeholder {\n        color: rgba(255, 255, 255, 0.5);\n      }\n    }\n\n    textarea {\n      height: 10em;\n      padding: 15px 15px;\n    }\n  }\n`;\n\nexport const Logo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-top: 20px;\n  opacity: 0.5;\n  cursor: pointer;\n\n  img {\n    height: 50px;\n    margin-right: 10px;\n  }\n\n  span {\n    color: #fff;\n    font-size: 42px;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  width: 100%;\n\n  button {\n    padding: 10px;\n    border: 0;\n    border-radius: 4px;\n    font-size: 20px;\n    font-weight: bold;\n    margin: 5px;\n    transition: background 0.2s;\n  }\n\n  button.salvar {\n    background: #d44059;\n    color: #fff;\n\n    &:hover {\n      background: ${darken(0.1, '#d44059')};\n    }\n  }\n\n  button.voltar {\n    background: #4dbaf9;\n    color: #fff;\n\n    &:hover {\n      background: ${darken(0.1, '#4dbaf9')};\n    }\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input } from '@rocketseat/unform';\n\nimport marvel from '../../assets/images/marvel.jpg';\n\nimport history from '../../services/history';\n\nimport { reserSeries } from '../../store/modules/series/actions';\nimport { saveCharactersRequest } from '../../store/modules/characterList/actions';\n\nimport { Container, Content, Logo, ButtonContainer } from './styles';\n\nexport default function Edit() {\n  const dispatch = useDispatch();\n\n  const character = useSelector(state => state.character.character);\n\n  const initialData = {\n    name: character[0].name,\n    description: character[0].description,\n  };\n\n  function handleGoStart() {\n    dispatch(reserSeries());\n    history.push('/');\n  }\n\n  function handleClickVoltar() {\n    // dispatch(reserSeries());\n    history.push('/detail');\n  }\n\n  function handleSubmit(data) {\n    const { name, description } = data;\n\n    dispatch(saveCharactersRequest(character[0].id, name, description));\n  }\n\n  return (\n    <Container>\n      <Logo onMouseDown={handleGoStart}>\n        <span>React +</span>\n        <img src={marvel} alt=\"marvel\" />\n        <span>API</span>\n      </Logo>\n      <Content>\n        <Form onSubmit={handleSubmit} initialData={initialData}>\n          <Input name=\"name\" placeholder=\"Nome do personagem\" />\n          <Input\n            multiline\n            name=\"description\"\n            placeholder=\"Descrição do personagem\"\n          />\n          <ButtonContainer>\n            <button type=\"submit\" className=\"salvar\">\n              Salvar\n            </button>\n            <button\n              type=\"button\"\n              className=\"voltar\"\n              onMouseDown={handleClickVoltar}\n            >\n              Voltar\n            </button>\n          </ButtonContainer>\n        </Form>\n      </Content>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\n\nimport history from './services/history';\nimport Main from './pages/Main';\nimport Detail from './pages/Detail';\nimport Edit from './pages/Edit';\n\nexport default function Routes() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/detail\" component={Detail} />\n        <Route path=\"/edit\" component={Edit} />\n      </Switch>\n    </Router>\n  );\n}\n","import produce from 'immer';\n\nexport const INITIAL_STATE = {\n  characters: [],\n  page: 1,\n  loading: false,\n  total: 0,\n  pageCount: 0,\n  searchString: '',\n};\n\nexport default function characterList(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case '@characters/REQUEST': {\n        draft.loading = true;\n        break;\n      }\n      case '@characters/SUCCESS': {\n        draft.characters = action.payload.characters;\n        draft.loading = false;\n        draft.total = action.payload.total;\n        draft.pageCount = Math.ceil(draft.total / 6);\n        draft.searchString = action.payload.searchString;\n        draft.page = action.payload.page;\n        break;\n      }\n      case '@characters/FAILURE': {\n        draft.loading = false;\n        break;\n      }\n      case '@characters/SAVE_REQUEST': {\n        draft.loading = true;\n        break;\n      }\n      case '@characters/SAVE_SUCCESS': {\n        const { updatedCharacters } = action.payload;\n        draft.characters = updatedCharacters;\n        draft.loading = false;\n        break;\n      }\n      case '@characters/SAVE_FAILURE': {\n        draft.loading = false;\n        break;\n      }\n      default:\n    }\n  });\n}\n","import produce from 'immer';\n\nexport const INITIAL_STATE = {\n  page: 1,\n  loading: false,\n  character: null,\n};\n\nexport default function character(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case '@character/REQUEST': {\n        draft.loading = true;\n        break;\n      }\n      case '@character/SUCCESS': {\n        draft.character = action.payload.character;\n        draft.loading = false;\n        break;\n      }\n      case '@character/FAILURE': {\n        draft.loading = false;\n        break;\n      }\n      case '@character/SAVE_REQUEST': {\n        draft.loading = true;\n        break;\n      }\n      case '@character/SAVE_SUCCESS': {\n        draft.character[0] = action.payload.character;\n        draft.loading = false;\n        break;\n      }\n      case '@character/SAVE_FAILURE': {\n        draft.loading = false;\n        break;\n      }\n      default:\n    }\n  });\n}\n","import produce from 'immer';\n\nexport const INITIAL_STATE = {\n  series: [],\n  page: 1,\n  loading: false,\n  total: 0,\n  pageCount: 0,\n};\n\nexport default function serieList(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case '@series/REQUEST': {\n        draft.loading = true;\n        break;\n      }\n      case '@series/SUCCESS': {\n        draft.series = action.payload.series;\n        draft.loading = false;\n        draft.total = action.payload.total;\n        draft.pageCount = Math.ceil(draft.total / 12);\n        draft.page = action.payload.page;\n        break;\n      }\n      case '@series/FAILURE': {\n        draft.loading = false;\n        break;\n      }\n      case '@series/RESET': {\n        draft.series = [];\n        draft.loading = false;\n        draft.total = 0;\n        draft.page = 1;\n        draft.pageCount = 0;\n        break;\n      }\n      default:\n    }\n  });\n}\n","import { combineReducers } from 'redux';\n\nimport characterList from './characterList/reducer';\nimport character from './character/reducer';\nimport series from './series/reducer';\n\nexport default combineReducers({\n  character,\n  characterList,\n  series,\n});\n","import axios from 'axios';\nimport crypto from 'crypto';\n\nconst toHash = `1${process.env.REACT_APP_API_PRIVATE_KEY}${process.env.REACT_APP_API_PUBLIC_KEY}`;\n\nconst hash = crypto\n  .createHash('md5')\n  .update(toHash)\n  .digest('hex');\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\napi.defaults.params = {};\napi.defaults.params.ts = 1;\napi.defaults.params.apikey = process.env.REACT_APP_API_PUBLIC_KEY;\napi.defaults.params.hash = hash;\n\nexport default api;\n","export const characters = state => state.characterList.characters;\n","import { takeLatest, call, put, all, select } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '../../../services/api';\nimport history from '../../../services/history';\n\nimport {\n  getCharactersSuccess,\n  getCharactersFailure,\n  saveCharactersSuccess,\n} from './actions';\n\nimport { saveCharacterRequest } from '../character/actions';\n\nimport * as selectors from './selectors';\n\nconst limit = 6;\n\nexport function* getCharacters({ payload }) {\n  const { page, searchString } = payload;\n\n  const extraParams = {\n    limit,\n    offset: (page - 1) * limit,\n  };\n\n  try {\n    const response = yield call(api.get, 'characters', {\n      params: {\n        ...api.defaults.params,\n        ...extraParams,\n        ...(searchString !== '' && { nameStartsWith: searchString }),\n      },\n    });\n\n    const { total } = response.data.data;\n\n    const formatted = response.data.data.results.map(character => {\n      return {\n        id: character.id,\n        name: character.name,\n        url: `${character.thumbnail.path}.${character.thumbnail.extension}`,\n      };\n    });\n\n    yield put(getCharactersSuccess(formatted, total, searchString, page));\n  } catch (err) {\n    toast.error('Falha ao carregar personagens da API da Marvel.');\n    yield put(getCharactersFailure());\n  }\n}\n\nexport function* saveCharacter({ payload }) {\n  const { characterId, name, description } = payload;\n  const characters = yield select(selectors.characters);\n\n  const updatedCharacters = characters.map(character => {\n    return character.id === characterId\n      ? { ...character, name, description }\n      : character;\n  });\n\n  yield put(saveCharacterRequest(characterId, name, description));\n  yield put(saveCharactersSuccess(updatedCharacters));\n\n  toast.success('Herói alterado com sucesso.');\n\n  history.push('/detail');\n}\n\nexport default all([\n  takeLatest('@characters/REQUEST', getCharacters),\n  takeLatest('@characters/SAVE_REQUEST', saveCharacter),\n]);\n","export const character = state => state.character.character;\n","import { takeLatest, call, put, all, select } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '../../../services/api';\nimport history from '../../../services/history';\n\nimport {\n  getCharacterSuccess,\n  getCharacterFailure,\n  saveCharacterSuccess,\n} from './actions';\nimport { getSeriesRequest } from '../series/actions';\n\nimport * as selectors from './selectors';\n\nexport function* getCharacter({ payload }) {\n  const { characterId } = payload;\n\n  try {\n    const response = yield call(api.get, `characters/${characterId}`, {\n      params: {\n        ...api.defaults.params,\n      },\n    });\n\n    const formatted = response.data.data.results.map(character => {\n      return {\n        id: character.id,\n        name: character.name,\n        url: `${character.thumbnail.path}.${character.thumbnail.extension}`,\n        description: character.description,\n      };\n    });\n\n    yield put(getSeriesRequest(characterId, 1));\n    yield put(getCharacterSuccess(formatted));\n\n    history.push('/detail');\n  } catch (err) {\n    toast.error('Falha ao carregar personagem da API da Marvel.');\n    yield put(getCharacterFailure());\n  }\n}\n\nexport function* saveCharacter({ payload }) {\n  const { name, description } = payload;\n  const character = yield select(selectors.character);\n\n  const updatedCharacter = { ...character[0], name, description };\n\n  yield put(saveCharacterSuccess(updatedCharacter));\n}\n\nexport default all([\n  takeLatest('@character/REQUEST', getCharacter),\n  takeLatest('@character/SAVE_REQUEST', saveCharacter),\n]);\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '../../../services/api';\n\nimport { getSeriesSuccess, getSeriesFailure } from './actions';\n\nconst limit = 12;\n\nexport function* getSeries({ payload }) {\n  const { characterId, page } = payload;\n\n  const extraParams = {\n    limit,\n    offset: (page - 1) * limit,\n  };\n\n  try {\n    const response = yield call(api.get, `characters/${characterId}/series`, {\n      params: {\n        ...api.defaults.params,\n        ...extraParams,\n      },\n    });\n\n    const { total } = response.data.data;\n\n    const formatted = response.data.data.results.map(serie => {\n      return {\n        id: serie.id,\n        title: serie.title,\n        startYear: serie.startYear,\n        endYear: serie.endYear,\n        url: `${serie.thumbnail.path}.${serie.thumbnail.extension}`,\n      };\n    });\n\n    yield put(getSeriesSuccess(formatted, total, page));\n  } catch (err) {\n    toast.error('Falha ao carregar séries da API da Marvel.');\n    yield put(getSeriesFailure());\n  }\n}\n\nexport default all([takeLatest('@series/REQUEST', getSeries)]);\n","import { all } from 'redux-saga/effects';\n\nimport characterList from './characterList/sagas';\nimport character from './character/sagas';\nimport series from './series/sagas';\n\nexport default function* rootSaga() {\n  return yield all([characterList, character, series]);\n}\n","import { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\n\nimport createStore from './createStore';\nimport persistReducers from './persistReducers';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\n\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor,\n});\n\nconst middlewares = [sagaMiddleware];\n\nconst store = createStore(persistReducers(rootReducer), middlewares);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport { store, persistor };\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nexport default reducers => {\n  const persistedReducer = persistReducer(\n    {\n      key: 'marvel',\n      storage,\n      whitelist: ['character', 'characterList', 'series'],\n    },\n    reducers\n  );\n\n  return persistedReducer;\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\n\nexport default (reducers, middlewares) => {\n  const enhancer =\n    process.env.NODE_ENV === 'development'\n      ? compose(\n          console.tron.createEnhancer(),\n          applyMiddleware(...middlewares)\n        )\n      : applyMiddleware(...middlewares);\n  return createStore(reducers, enhancer);\n};\n","import React from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport './config/ReactotronConfig';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\nimport { store, persistor } from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Routes />\n      </PersistGate>\n      <GlobalStyle />\n      <ToastContainer autoClose={3000} />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/marvel.cc3a8cb9.jpg\";"],"sourceRoot":""}